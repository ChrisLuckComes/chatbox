name: Build and Release

on:
  push:
    branches: [ main ]
    tags-ignore: [ 'v*' ]  # 忽略标签推送触发
  pull_request:
    branches: [ main ]
  create:
    tags: [ 'v*' ]  # 只在创建标签时触发

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        node-version: [18.x]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Create app-config.json
        run: |
          echo '{
            "WQ_API_KEY": "${{ secrets.WQ_API_KEY }}"
          }' > app-config.default.json

      - name: Build and Pack
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WQ_API_KEY: ${{ secrets.WQ_API_KEY }}
        run: |
          npm run build
          npm run build:${{ matrix.os == 'windows-latest' && 'win' || matrix.os == 'macos-latest' && 'mac' || 'linux' }}

      - name: Upload Windows Artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            dist/*.exe
            !dist/*-unpacked/

      - name: Upload MacOS Artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            dist/*.dmg
            !dist/*-unpacked/

      - name: Upload Linux Artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            dist/*.AppImage
            dist/*.deb
            !dist/*-unpacked/

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-files
          pattern: '*-artifacts'
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-files/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}